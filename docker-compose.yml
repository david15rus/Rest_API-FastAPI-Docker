version: '3.8'

services:
  fastapi_restaurant:
    container_name: fastapi_restaurant
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      DATABASE_URL_TEST: "${DATABASE_URL_TEST}"
    entrypoint: sh -c "alembic upgrade head
      && uvicorn my_app.main_onion:app --host 0.0.0.0 --port 8000
      && pytest /test"
    ports:
      - '8000:8000'
    depends_on:
      postgres_restaurant:
        condition: service_healthy
    volumes:
      - ./my_app:/my_app


  postgres_restaurant:
    container_name: postgres_restaurant
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: "Fast_API"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${PGUSER}"
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready', '-U', '${POSTGRES_USER}', '-d', 'Fast_API']
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  postgres_test:
    container_name: postgres_test
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: "Fast_API_test"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${PGUSER}"
    expose:
      - 5433
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready', '-U', '${POSTGRES_USER}', '-d', 'Fast_API_Test']
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s