version: '3.8'

services:
  fastapi_restaurant:
    container_name: fastapi_restaurant
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      DATABASE_URL_TEST: "${DATABASE_URL_TEST}"
      REDIS_URL: "${REDIS_URL}"
    entrypoint: sh -c "alembic upgrade head
      && uvicorn my_app.main_onion:app --host 0.0.0.0 --port 8000
      && pytest /test"
    ports:
      - '8000:8000'
    networks:
      - app_network
    depends_on:
      postgres_restaurant:
        condition: service_healthy

  postgres_restaurant:
    container_name: postgres_restaurant
    image: postgres:15.1-alpine
    environment:
      POSTGRES_DB: "Fast_API"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${PGUSER}"
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready', '-U', '${POSTGRES_USER}', '-d', 'Fast_API']
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis_app:
    image: redis:7
    container_name: redis_app
    ports:
      - "6379:6379"
    networks:
      - app_network
    expose:
      - 6379

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network
    expose:
      - 5672

  celery_worker:
    build:
      context: tasks
      dockerfile: Dockerfile_worker
    environment:
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      RABBITMQ_URL: "${RABBIT_MQ_URL}"
      RABBITMQ_USER: "guest"
      RABBITMQ_PASS: "guest"
    container_name: celery_worker
    entrypoint: celery -A tasks:celery_app worker -l info
    volumes:
      - D:\Job\Python_projects\FastAPI(Docker)\admin:/celery-app/admin
    networks:
      - app_network

  celery_beat:
    build:
      context: tasks
      dockerfile: Dockerfile_beat
    environment:
      RABBITMQ_URL: "${RABBIT_MQ_URL}"
      RABBITMQ_USER: "guest"
      RABBITMQ_PASS: "guest"
    container_name: celery_beat
    entrypoint: celery -A tasks:celery_app beat -l info
    networks:
      - app_network

networks:
  app_network:
    name: app_network

volumes:
  pgdbdata: null
  admin: null
